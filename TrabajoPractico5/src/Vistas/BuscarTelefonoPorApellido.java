/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidad.Contacto;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Federico_Galan, Tomas Abatedaga, Heber Gomez, Lucas Carre√±o, Nehuen Zerda, Juan Carreras
 */
public class BuscarTelefonoPorApellido extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarTelefonoPorApellido
     */
    public BuscarTelefonoPorApellido() {
        initComponents();
        configurarSeleccionTabla();
        cargarTodosContactos(); // para mostrar todos al inicio
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtabClientes = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jtfApellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlTelefonos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Apellido:");

        jtabClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DNI", "Apellido", "Nombre", "Direccion", "Ciudad", "Telefono"
            }
        ));
        jScrollPane2.setViewportView(jtabClientes);

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jtfApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfApellidoActionPerformed(evt);
            }
        });
        jtfApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfApellidoKeyReleased(evt);
            }
        });

        jlTelefonos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlTelefonos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlTelefonosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlTelefonos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jbSalir))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Buscar Telefono por Apellido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtfApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfApellidoKeyReleased
        String texto = jtfApellido.getText().trim().toLowerCase();

        // Obtenemos el modelo de la tabla existente
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jtabClientes.getModel();
        modelo.setRowCount(0); // Limpiamos las filas actuales

        // Si el campo esta vacio, entonces mostramos todos
        if (texto.isEmpty()) {
            for (Contacto c : MenuPrincipal.listaContactos) {
                modelo.addRow(new Object[]{
                    c.getDni(),
                    c.getApellido(),
                    c.getNombre(),
                    c.getDireccion(),
                    c.getCiudad(),
                    c.getTelefono()
                });
            }
        } else {
            // Si hay texto, mostramos solo los que coinciden
            for (Contacto c : MenuPrincipal.listaContactos) {
                if (c.getApellido().toLowerCase().contains(texto)) {
                    modelo.addRow(new Object[]{
                        c.getDni(),
                        c.getApellido(),
                        c.getNombre(),
                        c.getDireccion(),
                        c.getCiudad(),
                        c.getTelefono()
                    });
                }
            }
        }

    }//GEN-LAST:event_jtfApellidoKeyReleased
    // Cargar todos los contactos al inicio
    private void cargarTodosContactos() {
        DefaultTableModel modeloTabla = (DefaultTableModel) jtabClientes.getModel();
        DefaultListModel<String> modeloLista = new DefaultListModel<>();

        modeloTabla.setRowCount(0); // limpiar tabla

        for (Contacto c : MenuPrincipal.listaContactos) {
            // Agregamos a la tabla
            modeloTabla.addRow(new Object[]{
                c.getDni(),
                c.getApellido(),
                c.getNombre(),
                c.getDireccion(),
                c.getCiudad(),
                c.getTelefono()
            });

            // Agregamos apellidos al JList (sin duplicados)
            if (!modeloLista.contains(c.getApellido())) {
                modeloLista.addElement(c.getApellido());
            }
        }

        jlTelefonos.setModel(modeloLista);
    }

    // Configuro para que al seleccionar una fila en la tabla, la lista de telefonos muestre ese contacto
    private void configurarSeleccionTabla() {
        jtabClientes.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int fila = jtabClientes.getSelectedRow();
                if (fila != -1) {
                    DefaultListModel<String> modeloLista = new DefaultListModel<>();
                    String telefono = jtabClientes.getValueAt(fila, 5).toString();
                    modeloLista.addElement(telefono);
                    jlTelefonos.setModel(modeloLista);
                }
            }
        });
    }
    private void jtfApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfApellidoActionPerformed

    }//GEN-LAST:event_jtfApellidoActionPerformed

    private void jlTelefonosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlTelefonosValueChanged
        if (!evt.getValueIsAdjusting()) {
            String apellidoSeleccionado = jlTelefonos.getSelectedValue();

            if (apellidoSeleccionado != null) {
                DefaultTableModel modeloTabla = (DefaultTableModel) jtabClientes.getModel();
                modeloTabla.setRowCount(0); // limpiar tabla

                for (Contacto c : MenuPrincipal.listaContactos) {
                    if (c.getApellido().equalsIgnoreCase(apellidoSeleccionado)) {
                        modeloTabla.addRow(new Object[]{
                            c.getDni(),
                            c.getApellido(),
                            c.getNombre(),
                            c.getDireccion(),
                            c.getCiudad(),
                            c.getTelefono()
                        });
                    }
                }
            }
        }
    }//GEN-LAST:event_jlTelefonosValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbSalir;
    private javax.swing.JList<String> jlTelefonos;
    private javax.swing.JTable jtabClientes;
    private javax.swing.JTextField jtfApellido;
    // End of variables declaration//GEN-END:variables

}
